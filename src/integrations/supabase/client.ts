
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://nnwzfliblfuldwxpuata.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im5ud3pmbGlibGZ1bGR3eHB1YXRhIiwicm9sZSI6ImFub24iLCJpYXQiOjE3Mzk0MTYwNTgsImV4cCI6MjA1NDk5MjA1OH0.jEa99YSuIt36oOyaAvIZ5pGCDk9vSa3tBfi43Uqm8OU";

// Check that the necessary environment variables are set
if (!SUPABASE_URL || !SUPABASE_PUBLISHABLE_KEY) {
  console.error("Missing Supabase environment variables. Make sure SUPABASE_URL and SUPABASE_PUBLISHABLE_KEY are set.");
}

// Create and export the Supabase client
export const supabase = createClient<Database>(
  SUPABASE_URL, 
  SUPABASE_PUBLISHABLE_KEY,
  {
    auth: {
      autoRefreshToken: true,
      persistSession: true,
      detectSessionInUrl: true
    },
    // Add global error handler to improve error logging and debugging
    global: {
      headers: {
        'x-application-name': 'neighborhood-app'
      }
    },
    // Add reasonable timeouts to prevent hanging requests
    realtime: {
      timeout: 30000 // 30 seconds
    }
  }
);

// Add validation check to ensure client was created correctly
if (!supabase || !supabase.auth || !supabase.rpc) {
  console.error("Supabase client initialization failed. Check your environment variables and network connection.");
}

// Check auth state and log it for debugging
supabase.auth.onAuthStateChange((event, session) => {
  console.log("[Supabase Client] Auth state changed:", {
    event,
    hasSession: !!session,
    userId: session?.user?.id,
    timestamp: new Date().toISOString()
  });
});

// Export it for use throughout the application
// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";
